version: '3.8'

services:
  fastapi:
    build:
      context: ./
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - ./data/results:/app/results
    environment:
      - RESULTS_FOLDER=/app/results
      - AIRFLOW_HOST=airflow-webserver
      - AIRFLOW_PORT=8080
      - AIRFLOW_USER=airflow
      - AIRFLOW_PASSWORD=airflow
      - API_HOST=fastapi
      - API_PORT=8000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_DATABASE=neo4j
      - PYTHONUNBUFFERED=1
    command: uvicorn api:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - airflow-webserver
      - neo4j
    restart: unless-stopped
    networks:
      - aml-network

  # Neo4j database
  neo4j:
    image: neo4j:5.13.0
    ports:
      - "7474:7474"  # Browser interface
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_db_transaction_timeout=300s
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:7474"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - aml-network

  # Airflow components with custom image
  airflow-webserver:
    build:
      context: ./
      dockerfile: Dockerfile.airflow
    depends_on:
      - airflow-init
      - postgres
      - redis
      - neo4j
    # Modified environment variables section in docker-compose.yml
    environment:
      - AIRFLOW__WEBSERVER__BASE_URL=https://eira.indresh.me/airflow
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY=/opt/airflow/logs/scheduler
      - AIRFLOW__WEBSERVER__SECRET_KEY=aml_risk_assessment_secret_key
      - OPENCORPORATES_API_KEY=${OPENCORPORATES_API_KEY}
      - OPENSANCTIONS_API_KEY=${OPENSANCTIONS_API_KEY}
      - GEMINI_API_KEYS=${GEMINI_API_KEYS}
      - RESULTS_FOLDER=${RESULTS_FOLDER}
      - SANCTION_DATA_FOLDER=${SANCTION_DATA_FOLDER}
      - PEP_DATA_FILE=${PEP_DATA_FILE}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_DATABASE=neo4j
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    user: "0:0"  # Run as root
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - aml-network

  airflow-scheduler:
    build:
      context: ./
      dockerfile: Dockerfile.airflow
    depends_on:
      - airflow-webserver
      - neo4j
    environment:
      - AIRFLOW__WEBSERVER__BASE_URL=https://eira.indresh.me/airflow
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY=/opt/airflow/logs/scheduler
      - OPENCORPORATES_API_KEY=${OPENCORPORATES_API_KEY:-}
      - OPENSANCTIONS_API_KEY=${OPENSANCTIONS_API_KEY:-}
      - GEMINI_API_KEYS=${GEMINI_API_KEYS:-}
      - RESULTS_FOLDER=/opt/airflow/data/results
      - SANCTION_DATA_FOLDER=/opt/airflow/data/sanctions
      - PEP_DATA_FILE=/opt/airflow/data/pep/pep_data.csv
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_DATABASE=neo4j
      - API_HOST=fastapi
      - API_PORT=8000
      - PYTHONUNBUFFERED=1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    user: "0:0"  # Run as root
    command: scheduler
    restart: unless-stopped
    networks:
      - aml-network

  airflow-worker:
    build:
      context: ./
      dockerfile: Dockerfile.airflow
    depends_on:
      - airflow-scheduler
      - neo4j
    # Modified environment variables section in docker-compose.yml
    environment:
      - AIRFLOW__WEBSERVER__BASE_URL=https://eira.indresh.me/airflow
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY=/opt/airflow/logs/scheduler
      - AIRFLOW__WEBSERVER__SECRET_KEY=aml_risk_assessment_secret_key
      - OPENCORPORATES_API_KEY=${OPENCORPORATES_API_KEY}
      - OPENSANCTIONS_API_KEY=${OPENSANCTIONS_API_KEY}
      - GEMINI_API_KEYS=${GEMINI_API_KEYS}
      - RESULTS_FOLDER=${RESULTS_FOLDER}
      - SANCTION_DATA_FOLDER=${SANCTION_DATA_FOLDER}
      - PEP_DATA_FILE=${PEP_DATA_FILE}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_DATABASE=neo4j
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    user: "0:0"  # Run as root
    command: celery worker
    restart: unless-stopped
    networks:
      - aml-network

  airflow-init:
    build:
      context: ./
      dockerfile: Dockerfile.airflow
    depends_on:
      - postgres
    environment:
      - AIRFLOW__WEBSERVER__BASE_URL=https://eira.indresh.me/airflow
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - _AIRFLOW_DB_MIGRATE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      - _AIRFLOW_WWW_USER_PASSWORD=${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      - PYTHONUNBUFFERED=1
    user: "0:0"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    command: bash -c "airflow db init && airflow users create --username airflow --password airflow --firstname Admin --lastname User --role Admin --email admin@example.com"
    restart: on-failure
    networks:
      - aml-network

  # PostgreSQL database for Airflow
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - aml-network

  # Redis for Airflow
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: unless-stopped
    networks:
      - aml-network

networks:
  aml-network:
    driver: bridge

volumes:
  postgres-db-volume:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  neo4j-plugins: